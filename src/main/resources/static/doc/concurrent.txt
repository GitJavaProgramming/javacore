
操作系统进程
    进程：OS分配资源的基本单位
    线程：处理器调度和运行的基本单位
        用户级线程
        内核线程 Java实现
            创建和销毁线程需要系统调用，内核为每个内核线程设置一个PCB，并对其进行控内核根据PCB感知线程的存在制。
Java并发编程
    创建线程
        实现Runnable接口
        继承Thread类
    线程API
        线程属性 group、id、name、state...
        join线程
        线程休眠
    同步与锁
        获得锁保证线程对资源的占用
        Java中的锁：
            按Java API分类
                内置锁 synchronized
                Lock接口
                    可重入锁
                    读写锁 写独占
                文件锁 FileLock
            按功能分类
                ...
        死锁
            原因
                竞争资源
                推进顺序不当
            必要条件
                互斥
                请求和保持
                不剥夺
                环路等待
            处理方法
                预防（破坏条件）、避免、检测、解除
        无锁 CAS 处理器指令 线程内确保数据最终正确 确保一个线程执行

    线程通信--为了确保数据一致性
        消息队列
            异步 非阻塞投递 生产者消费者模式
            缓冲
                延迟使用思想
                缓存--线程安全、失效策略

        信号量
            必须在同步块中，否则失去了多线程协作的意义
            Object API -> synchronized wait notify
            Lock Condition

    设备管理与中断
        设备与设备控制器 设备驱动 I/O控制
        当一个进程请求I/O操作时，该进程将被挂起，I/O设备完成I/O操作后，设备控制器便向CPU发送一个中断请求，
        CPU响应后便转向中断处理程序，中断处理程序执行相应的处理，处理完后解除相应进程的阻塞状态。
        软件中断--中断指令 Java中的线程（OS内核线程）是可以中断的？
        CPU的运算器、控制器、汇编语言中内中断、外中断。中断不是终止可以恢复，需要保存现场，8086指令系统中断指令。
    任务执行
        Runnable 任务->任务由线程(Thread)代理执行
            TimerTask--定时任务
            RunnableFuture--异步任务
                实现Future接口，Future表示异步计算结果
        Thread 线程
            自定义拥有特定功能的线程
                TimerThread
                ForJoinWorkerThread
                ...
        调度--组合任务（对资源的操作）与线程

    并发工具类与同步器
        参数据结构


# 参考资料
http://ifeve.com/aqs/
Java并发编程的艺术
Java高并发编程详解：多线程与架构设计
JAVA并发编程实践